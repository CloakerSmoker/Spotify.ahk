{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Getting started with Spotify.ahk To download or get the latist version, visit the Spotify.ahk Github page . Requirements Autohotkey_L - Which can be found here Spotify Premium - While not required for all functionality, some things might require a premium account (which will be noted on a per-page basis) Theorically, nothing else. All libraries Spotify.ahk requires are packaged with the download I forgot this page existed, just click through the playlist and track stuff","title":"Home"},{"location":"index.html#getting-started-with-spotifyahk","text":"To download or get the latist version, visit the Spotify.ahk Github page .","title":"Getting started with Spotify.ahk"},{"location":"index.html#requirements","text":"Autohotkey_L - Which can be found here Spotify Premium - While not required for all functionality, some things might require a premium account (which will be noted on a per-page basis) Theorically, nothing else. All libraries Spotify.ahk requires are packaged with the download I forgot this page existed, just click through the playlist and track stuff","title":"Requirements"},{"location":"about.html","text":"About Spotify.ahk Spotify.ahk is a (hopefully) fully featured wrapper for the Spotify API which aims to allow complete automation of Spotify","title":"About"},{"location":"about.html#about-spotifyahk","text":"Spotify.ahk is a (hopefully) fully featured wrapper for the Spotify API which aims to allow complete automation of Spotify","title":"About Spotify.ahk"},{"location":"albums/album-object.html","text":"Album Objects Wrap around this Spotify API object model. Note Album objects should only be created with .Albums.GetAlbums() unless they are returned by, or included in other objects. Properties Key Value description genres A string array of genres that fit the album id The Spotify ID of the album name The name of the album uri The Spotify URI of the album artists An array of Artist Objects that represents the Artist(s) of the album images An array of Spotify Image Objects tracks An array of Track Objects inside the album Methods Definition Description .Save() Saves an album to the current user's Your Music library .UnSave() Removes a saved album from the current user's Your Music library .Play() Tries to start playing the album on the active device, will cancel any other playback","title":"Album Objects"},{"location":"albums/album-object.html#album-objects","text":"Wrap around this Spotify API object model.","title":"Album Objects"},{"location":"albums/album-object.html#note","text":"Album objects should only be created with .Albums.GetAlbums() unless they are returned by, or included in other objects.","title":"Note"},{"location":"albums/album-object.html#properties","text":"Key Value description genres A string array of genres that fit the album id The Spotify ID of the album name The name of the album uri The Spotify URI of the album artists An array of Artist Objects that represents the Artist(s) of the album images An array of Spotify Image Objects tracks An array of Track Objects inside the album","title":"Properties"},{"location":"albums/album-object.html#methods","text":"Definition Description .Save() Saves an album to the current user's Your Music library .UnSave() Removes a saved album from the current user's Your Music library .Play() Tries to start playing the album on the active device, will cancel any other playback","title":"Methods"},{"location":"albums/get-album.html","text":"Getting An Album By ID Wraps around this Spotify API endpoint How to use After creating a Spotify object, you can use .Albums.GetAlbum() to get a album by its Spotify ID . This will return an Album Object which can then be used for the methods outlined on this page. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a album with .Albums.GetAlbum() by the album's Spotify ID C) Save the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Save()","title":"Get An Album By ID"},{"location":"albums/get-album.html#getting-an-album-by-id","text":"Wraps around this Spotify API endpoint","title":"Getting An Album By ID"},{"location":"albums/get-album.html#how-to-use","text":"After creating a Spotify object, you can use .Albums.GetAlbum() to get a album by its Spotify ID . This will return an Album Object which can then be used for the methods outlined on this page.","title":"How to use"},{"location":"albums/get-album.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a album with .Albums.GetAlbum() by the album's Spotify ID C) Save the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Save()","title":"Example"},{"location":"albums/play-album.html","text":"Playing An Album Wraps around this Spotify API endpoint Warning This method requires Spotify Premium, and will NOT work without Spotify Premium (see here ) Note If an active device is not found, an error about the response status code not being 2xx will be thrown. How to use After creating a Spotify object, and getting an album through either .Albums.GetAlbum() or any other function/object which contains/returns album objects, the .Play() method of the returned album object can be used. .Play() will start playing the album on the active device. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get an album with .Albums.GetAlbum() by the album's Spotify ID C) Play the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Play()","title":"Play An Album"},{"location":"albums/play-album.html#playing-an-album","text":"Wraps around this Spotify API endpoint","title":"Playing An Album"},{"location":"albums/play-album.html#warning","text":"","title":"Warning"},{"location":"albums/play-album.html#this-method-requires-spotify-premium-and-will-not-work-without-spotify-premium-see-here","text":"","title":"This method requires Spotify Premium, and will NOT work without Spotify Premium (see here)"},{"location":"albums/play-album.html#note","text":"If an active device is not found, an error about the response status code not being 2xx will be thrown.","title":"Note"},{"location":"albums/play-album.html#how-to-use","text":"After creating a Spotify object, and getting an album through either .Albums.GetAlbum() or any other function/object which contains/returns album objects, the .Play() method of the returned album object can be used. .Play() will start playing the album on the active device.","title":"How to use"},{"location":"albums/play-album.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get an album with .Albums.GetAlbum() by the album's Spotify ID C) Play the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Play()","title":"Example"},{"location":"albums/save-album.html","text":"Saving An Album Wraps around this Spotify API endpoint How to use After creating a Spotify object, and getting an album through either .Albums.GetAlbum() or any other function/object which contains/returns album objects, the .Save() method of the album object can be used. .Save() expects no parameters and will save an album to the current user's Your Music library. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Albums.GetAlbum() by the album's Spotify ID C) Save the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Save()","title":"Save An Album"},{"location":"albums/save-album.html#saving-an-album","text":"Wraps around this Spotify API endpoint","title":"Saving An Album"},{"location":"albums/save-album.html#how-to-use","text":"After creating a Spotify object, and getting an album through either .Albums.GetAlbum() or any other function/object which contains/returns album objects, the .Save() method of the album object can be used. .Save() expects no parameters and will save an album to the current user's Your Music library.","title":"How to use"},{"location":"albums/save-album.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Albums.GetAlbum() by the album's Spotify ID C) Save the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Save()","title":"Example"},{"location":"albums/unsave-album.html","text":"Un-Saving An Album Wraps around this Spotify API endpoint How to use After creating a Spotify object, and getting a album through either .Albums.GetAlbumk() or any other function/object which contains/returns album objects, the .UnSave() method of the album object can be used. .UnSave() expects no parameters and will remove a album from the current user's Your Music library. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get an album with .Albums.GetAlbum() by the album's Spotify ID C) Save the album D) Wait 20 seconds, then un-save the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Save() Sleep, 20000 GoodAlbumIMO.UnSave()","title":"Un-Save An Album"},{"location":"albums/unsave-album.html#un-saving-an-album","text":"Wraps around this Spotify API endpoint","title":"Un-Saving An Album"},{"location":"albums/unsave-album.html#how-to-use","text":"After creating a Spotify object, and getting a album through either .Albums.GetAlbumk() or any other function/object which contains/returns album objects, the .UnSave() method of the album object can be used. .UnSave() expects no parameters and will remove a album from the current user's Your Music library.","title":"How to use"},{"location":"albums/unsave-album.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get an album with .Albums.GetAlbum() by the album's Spotify ID C) Save the album D) Wait 20 seconds, then un-save the album Spoofy := new Spotify() GoodAlbumIMO := Spoofy.Albums.GetAlbum(\"7xuWUPvk8Xb042QUigdIrE\") GoodAlbumIMO.Save() Sleep, 20000 GoodAlbumIMO.UnSave()","title":"Example"},{"location":"examples/examples.html","text":"Hotkeys to save/un-save the currently playing track Spoofy := new Spotify() F1::Spoofy.Player.SaveCurrentlyPlaying() ; Alias for .Player.GetCurrentPlaybackInfo().Track.Save() F2::Spoofy.Player.UnSaveCurrentlyPlaying() ; Alias for .Player.GetCurrentPlaybackInfo().Track.UnSave() Hotkey to play a random album from the user's top artists Spoofy := new Spotify() TopArtists := Spoofy.CurrentUser.GetTop(\"artists\") ; Returns an array of top artists TopArtistsAlbums := TopArtists[1].GetAlbums() ; Returns an array of number 1 top artist's ablums Random, rand, 1, % TopArtistsAlbums.Length() ; Gets a random number 1 - Artist's number of ablums TopArtistsAlbums[rand].Play() ; Plays the random album","title":"Misc Examples"},{"location":"examples/examples.html#hotkeys-to-saveun-save-the-currently-playing-track","text":"Spoofy := new Spotify() F1::Spoofy.Player.SaveCurrentlyPlaying() ; Alias for .Player.GetCurrentPlaybackInfo().Track.Save() F2::Spoofy.Player.UnSaveCurrentlyPlaying() ; Alias for .Player.GetCurrentPlaybackInfo().Track.UnSave()","title":"Hotkeys to save/un-save the currently playing track"},{"location":"examples/examples.html#hotkey-to-play-a-random-album-from-the-users-top-artists","text":"Spoofy := new Spotify() TopArtists := Spoofy.CurrentUser.GetTop(\"artists\") ; Returns an array of top artists TopArtistsAlbums := TopArtists[1].GetAlbums() ; Returns an array of number 1 top artist's ablums Random, rand, 1, % TopArtistsAlbums.Length() ; Gets a random number 1 - Artist's number of ablums TopArtistsAlbums[rand].Play() ; Plays the random album","title":"Hotkey to play a random album from the user's top artists"},{"location":"player/current-info-object.html","text":"Current Playback Info Objects Wrap around this Spotify API object model. Note Current Playback Info Objects can NOT be created, they are only returned by .Player.GetCurrentPlaybackInfo() . Properties Key Value description device A Device Object of the active device repeat_state The repeat mode of the player, is off , track , or context shuffle_state The shuffle state of the player, is true for on, false for off context A Context Object of the current context timestamp A Unix Millisecond Timestamp of when this data was fetched progress_ms How many Milliseconds the player is into the current track is_playing True/false is the player playing, or is it paused track A Track Object of the currently playing track","title":"Current Playback Info Object"},{"location":"player/current-info-object.html#current-playback-info-objects","text":"Wrap around this Spotify API object model.","title":"Current Playback Info Objects"},{"location":"player/current-info-object.html#note","text":"Current Playback Info Objects can NOT be created, they are only returned by .Player.GetCurrentPlaybackInfo() .","title":"Note"},{"location":"player/current-info-object.html#properties","text":"Key Value description device A Device Object of the active device repeat_state The repeat mode of the player, is off , track , or context shuffle_state The shuffle state of the player, is true for on, false for off context A Context Object of the current context timestamp A Unix Millisecond Timestamp of when this data was fetched progress_ms How many Milliseconds the player is into the current track is_playing True/false is the player playing, or is it paused track A Track Object of the currently playing track","title":"Properties"},{"location":"player/get-current-info.html","text":"Getting Current Playback Info Wraps around this Spotify API endpoint How to use After creating a Spotify object, you can call .Player.GetCurrentPlaybackInfo() . This will return a Current Playback Info Object which contains no methods, but various information about the users current playback. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a Current Playback Info Object with .Player.GetCurrentPlaybackInfo() C) Show how many seconds into the song the player is, and the name property of the currently playing track Spoofy := new Spotify() CurrentPlayback := Spoofy.Player.GetCurrentPlaybackInfo() MsgBox, % \"You are currently \" Ceil(CurrentPlayback.progress_ms / 1000) \" seconds into the song \"\"\" CurrentPlayback.Track.Name \"\"\"\"","title":"Get Info About Current Playback"},{"location":"player/get-current-info.html#getting-current-playback-info","text":"Wraps around this Spotify API endpoint","title":"Getting Current Playback Info"},{"location":"player/get-current-info.html#how-to-use","text":"After creating a Spotify object, you can call .Player.GetCurrentPlaybackInfo() . This will return a Current Playback Info Object which contains no methods, but various information about the users current playback.","title":"How to use"},{"location":"player/get-current-info.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a Current Playback Info Object with .Player.GetCurrentPlaybackInfo() C) Show how many seconds into the song the player is, and the name property of the currently playing track Spoofy := new Spotify() CurrentPlayback := Spoofy.Player.GetCurrentPlaybackInfo() MsgBox, % \"You are currently \" Ceil(CurrentPlayback.progress_ms / 1000) \" seconds into the song \"\"\" CurrentPlayback.Track.Name \"\"\"\"","title":"Example"},{"location":"player/set-volume.html","text":"Setting Playback Volume Wraps around this Spotify API endpoint Warning This method requires Spotify Premium, and will NOT work without Spotify Premium (see here ) Note The API endpoint called by this method is in beta, and might not work perfectly How To Use After creating a Spotify object, the .Player.SetVolume() method can be used. .Player.SetVolume() expects one parameter, volume (A number 0-100 representing the volume percentage you want) and will try to set the playback volume on the currently active device to the passed percentage Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Call .Player.GetCurrentPlaybackInfo() and store the current volume percent C) Increment the current volume percentage by 10 D) Set the volume percentage to the new percentage Spoofy := new Spotify() CurrentVolume := Spoofy.Player.GetCurrentPlaybackInfo().progress_ms CurrentVolume += 10 Spoofy.Player.SetVolume(CurrentVolume)","title":"Set Playback Volume"},{"location":"player/set-volume.html#setting-playback-volume","text":"Wraps around this Spotify API endpoint","title":"Setting Playback Volume"},{"location":"player/set-volume.html#warning","text":"","title":"Warning"},{"location":"player/set-volume.html#this-method-requires-spotify-premium-and-will-not-work-without-spotify-premium-see-here","text":"","title":"This method requires Spotify Premium, and will NOT work without Spotify Premium (see here)"},{"location":"player/set-volume.html#note","text":"The API endpoint called by this method is in beta, and might not work perfectly","title":"Note"},{"location":"player/set-volume.html#how-to-use","text":"After creating a Spotify object, the .Player.SetVolume() method can be used. .Player.SetVolume() expects one parameter, volume (A number 0-100 representing the volume percentage you want) and will try to set the playback volume on the currently active device to the passed percentage","title":"How To Use"},{"location":"player/set-volume.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Call .Player.GetCurrentPlaybackInfo() and store the current volume percent C) Increment the current volume percentage by 10 D) Set the volume percentage to the new percentage Spoofy := new Spotify() CurrentVolume := Spoofy.Player.GetCurrentPlaybackInfo().progress_ms CurrentVolume += 10 Spoofy.Player.SetVolume(CurrentVolume)","title":"Example"},{"location":"playlists/add-tracks.html","text":"Adding Tracks To A Playlist Wraps around this Spotify API endpoint How to use After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() , the .AddTrack() method of the returned playlist object can be used. .AddTrack() expects one parameter, TrackIDOrTrackOBJ (Which can either be a track ID or a track object Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new (empty) playlist named Test 123 with the description This is an example playlist made by Spotify.ahk C) Add a track to the new playlist with .AddTrack() by the track's Spotify ID D) Will try to play the new playlist on the active device Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 123\", \"This is an example playlist made by Spotify.ahk\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.Play()","title":"Add Tracks To A Playlist"},{"location":"playlists/add-tracks.html#adding-tracks-to-a-playlist","text":"Wraps around this Spotify API endpoint","title":"Adding Tracks To A Playlist"},{"location":"playlists/add-tracks.html#how-to-use","text":"After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() , the .AddTrack() method of the returned playlist object can be used. .AddTrack() expects one parameter, TrackIDOrTrackOBJ (Which can either be a track ID or a track object","title":"How to use"},{"location":"playlists/add-tracks.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new (empty) playlist named Test 123 with the description This is an example playlist made by Spotify.ahk C) Add a track to the new playlist with .AddTrack() by the track's Spotify ID D) Will try to play the new playlist on the active device Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 123\", \"This is an example playlist made by Spotify.ahk\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.Play()","title":"Example"},{"location":"playlists/create.html","text":"Creating A Playlist Wraps around this Spotify API endpoint How to use After creating a Spotify object, call .Playlists.CreatePlaylist() , which expects two parameters, name (this name you want the new playlist to have) and description (the description you want the new playlist to have) This will return a playlist object owned by the user that authorized Spotify.ahk which can then be used to add tracks to the playlist you created. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new (empty) playlist named Test 123 with the description This is an example playlist made by Spotify.ahk C) Add a track to the new playlist with .AddTrack() by the track's Spotify ID D) Will try to play the new playlist on the active device Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 123\", \"This is an example playlist made by Spotify.ahk\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.Play()","title":"Create A Playlist"},{"location":"playlists/create.html#creating-a-playlist","text":"Wraps around this Spotify API endpoint","title":"Creating A Playlist"},{"location":"playlists/create.html#how-to-use","text":"After creating a Spotify object, call .Playlists.CreatePlaylist() , which expects two parameters, name (this name you want the new playlist to have) and description (the description you want the new playlist to have) This will return a playlist object owned by the user that authorized Spotify.ahk which can then be used to add tracks to the playlist you created.","title":"How to use"},{"location":"playlists/create.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new (empty) playlist named Test 123 with the description This is an example playlist made by Spotify.ahk C) Add a track to the new playlist with .AddTrack() by the track's Spotify ID D) Will try to play the new playlist on the active device Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 123\", \"This is an example playlist made by Spotify.ahk\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.Play()","title":"Example"},{"location":"playlists/delete-playlist.html","text":"Deleting A Playlist Wraps around this Spotify API endpoint Note It is not currently possible to delete a playlist entirely on Spotify, the best alternative is to unfollow it, which is the same as \"deleting\" a playlist through the web players or desktop app. Because of this, this method just unfollows a playlist. How to use After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() , the .Delete() method of the playlist object can be called to \"delete\" the playlist. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new Playlist Object C) Add 5 tracks to the playlist, 3 copies of Ocean Man and two other songs D) Wait for 10 seconds, then remove all copies of Ocean Man from the playlist E) Wait 20 seconds, then delete the playlist Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 1234\", \"This is a Spotify.ahk test playlist\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.AddTrack(\"2yYSMsrFJ6m7ePtLxQZZBF\") loop, 3 { NewPlaylist.AddTrack(\"6M14BiCN00nOsba4JaYsHW\") } Sleep, 10000 NewPlaylist.RemoveTrack(\"6M14BiCN00nOsba4JaYsHW\") Sleep, 20000 NewPlaylist.Delete()","title":"Delete A Playlist"},{"location":"playlists/delete-playlist.html#deleting-a-playlist","text":"Wraps around this Spotify API endpoint","title":"Deleting A Playlist"},{"location":"playlists/delete-playlist.html#note","text":"It is not currently possible to delete a playlist entirely on Spotify, the best alternative is to unfollow it, which is the same as \"deleting\" a playlist through the web players or desktop app. Because of this, this method just unfollows a playlist.","title":"Note"},{"location":"playlists/delete-playlist.html#how-to-use","text":"After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() , the .Delete() method of the playlist object can be called to \"delete\" the playlist.","title":"How to use"},{"location":"playlists/delete-playlist.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new Playlist Object C) Add 5 tracks to the playlist, 3 copies of Ocean Man and two other songs D) Wait for 10 seconds, then remove all copies of Ocean Man from the playlist E) Wait 20 seconds, then delete the playlist Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 1234\", \"This is a Spotify.ahk test playlist\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.AddTrack(\"2yYSMsrFJ6m7ePtLxQZZBF\") loop, 3 { NewPlaylist.AddTrack(\"6M14BiCN00nOsba4JaYsHW\") } Sleep, 10000 NewPlaylist.RemoveTrack(\"6M14BiCN00nOsba4JaYsHW\") Sleep, 20000 NewPlaylist.Delete()","title":"Example"},{"location":"playlists/get-playlist.html","text":"Getting A Playlist By ID Wraps around this Spotify API endpoint How to use After creating a Spotify object, you can use .Playlists.GetPlaylist() to get a playlist by its Spotify ID . This will return a Playlist Object which can then be played/edited by the methods outlined on this page. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get the playlist Epic Gamer Music by Enrique Triana C) Try to play Epic Gamer Music on the active device Spoofy := new Spotify() EpicGamerMusic := Spoofy.Playlists.GetPlaylist(\"2PJPSL6yYJA3ygxr5hADPw\") EpicGamerMusic.Play()","title":"Get A Playlist By ID"},{"location":"playlists/get-playlist.html#getting-a-playlist-by-id","text":"Wraps around this Spotify API endpoint","title":"Getting A Playlist By ID"},{"location":"playlists/get-playlist.html#how-to-use","text":"After creating a Spotify object, you can use .Playlists.GetPlaylist() to get a playlist by its Spotify ID . This will return a Playlist Object which can then be played/edited by the methods outlined on this page.","title":"How to use"},{"location":"playlists/get-playlist.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get the playlist Epic Gamer Music by Enrique Triana C) Try to play Epic Gamer Music on the active device Spoofy := new Spotify() EpicGamerMusic := Spoofy.Playlists.GetPlaylist(\"2PJPSL6yYJA3ygxr5hADPw\") EpicGamerMusic.Play()","title":"Example"},{"location":"playlists/play.html","text":"Playing A Playlist Wraps around this Spotify API endpoint Warning This method requires Spotify Premium, and will NOT work without Spotify Premium (see here ) Note This method does not match up with the API endpoint exactly, instead the ID of the playlist is used to build a Context Object which is then played If an active device is not found, an error about the response status code not being 2xx will be thrown. How to use After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() (And adding tracks to the playlist), the .Play() method of the returned playlist object can be used. .Play() will start playing the playlist on the active device. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new (empty) playlist named Test 123 with the description This is an example playlist made by Spotify.ahk C) Add a track to the new playlist with .AddTrack() by the track's Spotify ID D) Will try to play the new playlist on the active device Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 123\", \"This is an example playlist made by Spotify.ahk\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.Play()","title":"Play A Playlist"},{"location":"playlists/play.html#playing-a-playlist","text":"Wraps around this Spotify API endpoint","title":"Playing A Playlist"},{"location":"playlists/play.html#warning","text":"","title":"Warning"},{"location":"playlists/play.html#this-method-requires-spotify-premium-and-will-not-work-without-spotify-premium-see-here","text":"","title":"This method requires Spotify Premium, and will NOT work without Spotify Premium (see here)"},{"location":"playlists/play.html#note","text":"This method does not match up with the API endpoint exactly, instead the ID of the playlist is used to build a Context Object which is then played If an active device is not found, an error about the response status code not being 2xx will be thrown.","title":"Note"},{"location":"playlists/play.html#how-to-use","text":"After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() (And adding tracks to the playlist), the .Play() method of the returned playlist object can be used. .Play() will start playing the playlist on the active device.","title":"How to use"},{"location":"playlists/play.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new (empty) playlist named Test 123 with the description This is an example playlist made by Spotify.ahk C) Add a track to the new playlist with .AddTrack() by the track's Spotify ID D) Will try to play the new playlist on the active device Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 123\", \"This is an example playlist made by Spotify.ahk\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.Play()","title":"Example"},{"location":"playlists/playlist-object.html","text":"Playlist Objects Wrap around this Spotify API object model. Note Playlist objects should only be created with .Playlists.GetPlaylist() / .Playlists.CreatePlaylist() unless they are returned by, or included in other objects. Properties Key Value description description The description of the the playlist id The Spotify ID of the playlist name The name of the playlist uri The Spotify URI of the playlist owner A User Object representing the owner of the playlist public If the playlist is public or not (true/false) tracks An array of Track Objects that are in the playlist Methods Definition Description .AddTrack(TrackIDOrTrackOBJ) Takes a Track Object or Track ID and adds it to the playlist .RemoveTrack(TrackIDOrTrackOBJ) Takes a Track Object or Track ID and removes it from the playlist .Play() Plays the playlist on the currently active device .Delete() Deletes the playlist","title":"Playlist Objects"},{"location":"playlists/playlist-object.html#playlist-objects","text":"Wrap around this Spotify API object model.","title":"Playlist Objects"},{"location":"playlists/playlist-object.html#note","text":"Playlist objects should only be created with .Playlists.GetPlaylist() / .Playlists.CreatePlaylist() unless they are returned by, or included in other objects.","title":"Note"},{"location":"playlists/playlist-object.html#properties","text":"Key Value description description The description of the the playlist id The Spotify ID of the playlist name The name of the playlist uri The Spotify URI of the playlist owner A User Object representing the owner of the playlist public If the playlist is public or not (true/false) tracks An array of Track Objects that are in the playlist","title":"Properties"},{"location":"playlists/playlist-object.html#methods","text":"Definition Description .AddTrack(TrackIDOrTrackOBJ) Takes a Track Object or Track ID and adds it to the playlist .RemoveTrack(TrackIDOrTrackOBJ) Takes a Track Object or Track ID and removes it from the playlist .Play() Plays the playlist on the currently active device .Delete() Deletes the playlist","title":"Methods"},{"location":"playlists/remove-tracks.html","text":"Removing Tracks From A Playlist Wraps around this Spotify API endpoint How to use After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() (And adding tracks to the playlist), the .RemoveTrack() method of the returned playlist object can be used. .RemoveTrack() expects one parameter, TrackIDOrTrackOBJ (Which can either be a track ID or a track object and removes all instances of the track from the playlist Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new Playlist Object C) Add 5 tracks to the playlist, 3 copies of Ocean Man and two other songs D) Wait for 5 seconds, then remove all copies of Ocean Man from the playlist Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 1234\", \"This is a Spotify.ahk test playlist\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.AddTrack(\"2yYSMsrFJ6m7ePtLxQZZBF\") loop, 3 { NewPlaylist.AddTrack(\"6M14BiCN00nOsba4JaYsHW\") } Sleep, 10000 NewPlaylist.RemoveTrack(\"6M14BiCN00nOsba4JaYsHW\")","title":"Remove Tracks From A Playlist"},{"location":"playlists/remove-tracks.html#removing-tracks-from-a-playlist","text":"Wraps around this Spotify API endpoint","title":"Removing Tracks From A Playlist"},{"location":"playlists/remove-tracks.html#how-to-use","text":"After creating a Spotify object, and getting a playlist through either .Playlists.GetPlaylist() or creating a new playlist with .Playlists.CreatePlaylist() (And adding tracks to the playlist), the .RemoveTrack() method of the returned playlist object can be used. .RemoveTrack() expects one parameter, TrackIDOrTrackOBJ (Which can either be a track ID or a track object and removes all instances of the track from the playlist","title":"How to use"},{"location":"playlists/remove-tracks.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Create a new Playlist Object C) Add 5 tracks to the playlist, 3 copies of Ocean Man and two other songs D) Wait for 5 seconds, then remove all copies of Ocean Man from the playlist Spoofy := new Spotify() NewPlaylist := Spoofy.Playlists.CreatePlaylist(\"Test 1234\", \"This is a Spotify.ahk test playlist\") NewPlaylist.AddTrack(\"5ogtb9bGQoH8CjZNxmbNHR\") NewPlaylist.AddTrack(\"2yYSMsrFJ6m7ePtLxQZZBF\") loop, 3 { NewPlaylist.AddTrack(\"6M14BiCN00nOsba4JaYsHW\") } Sleep, 10000 NewPlaylist.RemoveTrack(\"6M14BiCN00nOsba4JaYsHW\")","title":"Example"},{"location":"tracks/get-track.html","text":"Getting A Track By ID Wraps around this Spotify API endpoint How to use After creating a Spotify object, you can use .Track.GetTrack() to get a track by its Spotify ID . This will return a Track Object which can then be used for the methods outlined on this page. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Save the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Save()","title":"Get A Track By ID"},{"location":"tracks/get-track.html#getting-a-track-by-id","text":"Wraps around this Spotify API endpoint","title":"Getting A Track By ID"},{"location":"tracks/get-track.html#how-to-use","text":"After creating a Spotify object, you can use .Track.GetTrack() to get a track by its Spotify ID . This will return a Track Object which can then be used for the methods outlined on this page.","title":"How to use"},{"location":"tracks/get-track.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Save the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Save()","title":"Example"},{"location":"tracks/play-track.html","text":"Playing A Track Wraps around this Spotify API endpoint Warning This method requires Spotify Premium, and will NOT work without Spotify Premium (see here ) Note This method does not match up with the API endpoint exactly, instead the ID of the track is used to build a Context Object which is then played If an active device is not found, an error about the response status code not being 2xx will be thrown. How to use After creating a Spotify object, and getting a track through either .Tracks.GetTrack() or any other function/object which contains/returns track objects, the .Play() method of the returned track object can be used. .Play() will start playing the track on the active device. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Play the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Play()","title":"Play A Track"},{"location":"tracks/play-track.html#playing-a-track","text":"Wraps around this Spotify API endpoint","title":"Playing A Track"},{"location":"tracks/play-track.html#warning","text":"","title":"Warning"},{"location":"tracks/play-track.html#this-method-requires-spotify-premium-and-will-not-work-without-spotify-premium-see-here","text":"","title":"This method requires Spotify Premium, and will NOT work without Spotify Premium (see here)"},{"location":"tracks/play-track.html#note","text":"This method does not match up with the API endpoint exactly, instead the ID of the track is used to build a Context Object which is then played If an active device is not found, an error about the response status code not being 2xx will be thrown.","title":"Note"},{"location":"tracks/play-track.html#how-to-use","text":"After creating a Spotify object, and getting a track through either .Tracks.GetTrack() or any other function/object which contains/returns track objects, the .Play() method of the returned track object can be used. .Play() will start playing the track on the active device.","title":"How to use"},{"location":"tracks/play-track.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Play the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Play()","title":"Example"},{"location":"tracks/save-track.html","text":"Saving A Track Wraps around this Spotify API endpoint Note If you have more that 10,000 tracks saved, this will fail with an HTTP status code of 403 How to use After creating a Spotify object, and getting a track through either .Tracks.GetTrack() or any other function/object which contains/returns track objects, the .Save() method of the track object can be used. .Save() expects no parameters and will save a track to the current user's Your Music library. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Save the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Save()","title":"Save A Track"},{"location":"tracks/save-track.html#saving-a-track","text":"Wraps around this Spotify API endpoint","title":"Saving A Track"},{"location":"tracks/save-track.html#note","text":"If you have more that 10,000 tracks saved, this will fail with an HTTP status code of 403","title":"Note"},{"location":"tracks/save-track.html#how-to-use","text":"After creating a Spotify object, and getting a track through either .Tracks.GetTrack() or any other function/object which contains/returns track objects, the .Save() method of the track object can be used. .Save() expects no parameters and will save a track to the current user's Your Music library.","title":"How to use"},{"location":"tracks/save-track.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Save the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Save()","title":"Example"},{"location":"tracks/track-object.html","text":"Track Objects Wrap around this Spotify API object model. Note Track objects should only be created with .Tracks.GetTrack() unless they are returned by, or included in other objects. Properties Key Value description album An Album Object of the album the track is from id The Spotify ID of the track name The name of the track uri The Spotify URI of the track artists An array of Artist Objects that represents the Artist(s) of the track duration The length of the track expressed in milliseconds explicit True/false, if the track is explicit or not Methods Definition Description .Save() Saves a track to the current user's Your Music library .UnSave() Removes a saved track from the current user's Your Music library .Play() Tries to start playing the track on the active device, will cancel any other playback","title":"Track Objects"},{"location":"tracks/track-object.html#track-objects","text":"Wrap around this Spotify API object model.","title":"Track Objects"},{"location":"tracks/track-object.html#note","text":"Track objects should only be created with .Tracks.GetTrack() unless they are returned by, or included in other objects.","title":"Note"},{"location":"tracks/track-object.html#properties","text":"Key Value description album An Album Object of the album the track is from id The Spotify ID of the track name The name of the track uri The Spotify URI of the track artists An array of Artist Objects that represents the Artist(s) of the track duration The length of the track expressed in milliseconds explicit True/false, if the track is explicit or not","title":"Properties"},{"location":"tracks/track-object.html#methods","text":"Definition Description .Save() Saves a track to the current user's Your Music library .UnSave() Removes a saved track from the current user's Your Music library .Play() Tries to start playing the track on the active device, will cancel any other playback","title":"Methods"},{"location":"tracks/unsave-track.html","text":"Un-Saving A Track Wraps around this Spotify API endpoint How to use After creating a Spotify object, and getting a track through either .Tracks.GetTrack() or any other function/object which contains/returns track objects, the .UnSave() method of the track object can be used. .UnSave() expects no parameters and will remove a track from the current user's Your Music library. Example This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Save the track D) Wait 20 seconds, then un-save the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Save() Sleep, 20000 GoodSongIMO.UnSave()","title":"Un-Save A Track"},{"location":"tracks/unsave-track.html#un-saving-a-track","text":"Wraps around this Spotify API endpoint","title":"Un-Saving A Track"},{"location":"tracks/unsave-track.html#how-to-use","text":"After creating a Spotify object, and getting a track through either .Tracks.GetTrack() or any other function/object which contains/returns track objects, the .UnSave() method of the track object can be used. .UnSave() expects no parameters and will remove a track from the current user's Your Music library.","title":"How to use"},{"location":"tracks/unsave-track.html#example","text":"This example will: A) Create a Spotify object (which will prompt the user for authorization if it is not already done) B) Get a track with .Tracks.GetTrack() by the track's Spotify ID C) Save the track D) Wait 20 seconds, then un-save the track Spoofy := new Spotify() GoodSongIMO := Spoofy.Tracks.GetTrack(\"4A6eJ3gOmVdD7C69N3DC7K\") GoodSongIMO.Save() Sleep, 20000 GoodSongIMO.UnSave()","title":"Example"}]}